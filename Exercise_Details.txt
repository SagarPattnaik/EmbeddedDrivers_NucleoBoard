To measure the time period of a signal using timer.

1. Use LSE/HSI as input signal to timer
LSE(32.765KHz)/HSI(16MHz) Input signal----->TIMER

2. To be able to use input signal to a timer, Basic timer doesnt provide any 
input channel which is used to feed external signal to Timer. Use General Purpose
Timer which has Input channel available. TIM2 to TIM5 and TIM9 to TIM14 are 
general purpose timer.

3. Configure PA0 to behave as TIM2_CH1 by using alternate function mode

4. Configure LSE as input to TIMER2 to measure the frequency
LSE(32.768KHz)----> PA0 ---->TIMER2

Configure and activate LSE in one of the GPIO pin and use jumper wire to 
provide clock PA0 (TIMER2_CH1). 
Configure LSE to output the clock on MCO1 PA8

MCO1(LSE(32.768KHz))-->PA8-->PA0(TIM2_CH1)-->TIMER2


1. Configure Timer6 as 50KHz
2. Connect PA5-->PA0

*************************** TIMER output COmpare Mode******************************
Exercise:

Write an application by using STM32 TIMER2 to produce square wave forms of 500KHz,
1Khz, 2 Khz, and 4KHz on 4 different output channels

 _______________________
|                       |
|                       |      TIM2_CH1 500Hz
|                       |------------------------>
|                       |
|                       |      TIM2_CH2 1KHz
|                       |------------------------>
|         TIMER2        |
|                       |      TIM2_CH3 2KHz
|                       |------------------------>
|                       |
|                       |      TIM2_CH4 4KHz
|                       |------------------------>
|                       |
|_______________________|                   

To have driver files for Timer output compare channel, configure the following.
TIM2--> Channel1-->Ouput Compare CH1

	/* 2. Configure gpios to behave as timer2 channel 1,2,3 and 4 */
	/* 	PA0  --> TIM2_CH1 --> 500Hz
		PA1  --> TIM2_CH2 --> 1KHz
		PB10 --> TIM2_CH3 --> 2KHz
		PB2  --> TIM2_CH4 --> 4KHz  */

*********************************** PWM Control ***********************************

Bu ysing PWM Mode, generate PWM signals of 25%, 45%, 75% and 90% duty cycle on TIMER2's channel

How to generate pulse value for 40% of Duty cycle
Lets imagine Period = 1 second ARR = 10000
Then Pulse = 40% of ARR = 4000

********************************* Button Interrupt ********************************

How does a button issue interrupt to the processor in STM32?
1. The button is connected to a GPIO Pin (For Nucleo board it is PC13).
2. The GPIO pin should be configured to input mode.
3. The link between a GPIO port and the relevant EXTI line (for PC13, it is EXTI15_10)
must be established using the SYSCFG_EXTICRx register.
4. Configure the trigger detection (falling/rising) for relevant EXTI line. This is 
done via EXTI controller register.
5. Implement the handler to service the interrupt.

*********************************** LowPowerMode **********************************

Write an application in which TIM6 triggers interrupt for every 10ms and in the ISR
of TIM6, send some data over UART2

-> Measure the current consumption without sleep mode
-> Measure the current consumption with sleep mode(Enter sleepmode using SLEEPONEXIT)
-> Toggle PA12 inside Timer6 Interrupt and probe using logic analyzer to see how much 
time it took to transmit UART2 message.