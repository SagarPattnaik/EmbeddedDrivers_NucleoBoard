Use the basic timer to generate intterupt for every 100ms. 
Toggle the GPIO or LED inside the Timer IRQ handler and 
verify using logic analyzer.

We use basic Timer TIM6 for this. Use the following timer clock configuration.
Input clock source --> HSI 16Mhz--> SYSCLK 16MHz--> AHB Prescaler 1 --> 
HCLK 16Mhz -->APB1 Prescaler 1-->PCLK1    -->16Mhz
                              -->x1->TIMER-->16Mhz
What is the period value to get time base of 100ms?
If prescaler = 0
CNT_CLK = 16MHz
time pet tick = 0.0625 micro second
For 100ms period value ARR = 100ms/0.0625 = 1600000. 
But our register can hold only upto 65536 which is 16 bit value.
Hence we need prescaler to scale down CNT_CLK.

If prescaler = 1
CNT_CLK = 8MHz
time pet tick = 0.125 micro second
For 100ms period value ARR = 100ms/0.125 = 800000. 

Please follow the excel sheet /Documents for more detailed calculation

Here are the selected configuration for TIM6 100ms period
HSI of 16MHz clock as Input Source 
Prescaler = 24
Period = 64000-1

For Interrupt version Implementation, use the following steps.
1. Remove the while implementation(blocking mode) and replace with HAL_TIM_Base_Start_IT
2. Implement Interrupt Handler TIM6_DAC_IRQHandler in it.c file and call 
Interrupt processing API  HAL_TIM_IRQHandler. 
3. Implement callback function HAL_TIM_PeriodElapsedCallback in application
4. Toggle GPIOA pin5 inside the callback function

